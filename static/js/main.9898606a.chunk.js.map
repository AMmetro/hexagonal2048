{"version":3,"sources":["utils/API.js","Component/Header.js","App.js","utils/checkGamOver.js","utils/keyDown.js","reportWebVitals.js","index.js"],"names":["APIgetData","serverUrl","body","axios","create","baseURL","post","Header","props","className","id","onChange","event","setServerUrl","target","value","selectServerURL","data-status","status","blockStyle","width","height","color","background","opacity","App","useState","data","setData","setStatus","embedData","incomData","tepmData","JSON","parse","stringify","map","localData","i","length","x","y","z","currentStatus","tempData","Object","assign","core","q","t","w","f","res1","res2","res3","res4","res5","res6","checkMax","checkGamOver","handleKeyDown","prevData","playerTurn","keyCode","keyDown","computerTurn","filledArray","filter","row","then","res","useEffect","document","addEventListener","removeEventListener","cell","index","data-x","data-y","data-z","data-value","style","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9898606a.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport const APIgetData=(serverUrl,body)=>{\n\n    const instance = axios.create({\n        baseURL: serverUrl,\n    })\n\n            const promise = instance.post('2', body);\n            return promise\n\n}\n\n\n\n\n","import '../App.css';\r\nimport React from \"react\";\r\n\r\n\r\nfunction Header(props) {\r\n\r\n     const selectServerURL=(event)=>{\r\n        props.setServerUrl(event.target.value)\r\n    }\r\n\r\n    return (\r\n\r\n                <div>\r\n                    <div className={\"header\"}>\r\n                        <span>RNG-server url</span>\r\n                        <select id=\"url-server\" onChange={(event)=>selectServerURL(event)}>\r\n                            <option id=\"localhost\" value=\"http://localhost:13337/\">Local server</option>\r\n                            <option id=\"remote\" value=\"//68f02c80-3bed-4e10-a747-4ff774ae905a.pub.instances.scw.cloud\">Remote server</option>\r\n                        </select>\r\n                        <div>\r\n                            <span> Game Status: </span>\r\n                            <span data-status={props.status}>{props.status}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Header;\r\n","import './App.css';\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nimport {keyDown} from \"./utils/keyDown\";\r\nimport {APIgetData} from \"./utils/API\"\r\nimport {checkGamOver} from \"./utils/checkGamOver\"\r\nimport Header from \"./Component/Header\";\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n    const [data, setData] = useState([\r\n        {\"x\": 0, \"y\": 1, \"z\": -1, \"value\": 0},\r\n        {\"x\": -1, \"y\": 1, \"z\": 0, \"value\": 0},\r\n        {\"x\": 1, \"y\": 0, \"z\": -1, \"value\": 0},\r\n        {\"x\": 0, \"y\": 0, \"z\": 0, \"value\": 0},\r\n        {\"x\": -1, \"y\": 0, \"z\": 1, \"value\": 0},\r\n        {\"x\": 1, \"y\": -1, \"z\": 0, \"value\": 0},\r\n        {\"x\": 0, \"y\": -1, \"z\": 1, \"value\": 0}\r\n    ]);\r\n    let [serverUrl, setServerUrl] = useState(\"http://localhost:13337/\")\r\n    let [status, setStatus] = useState(\"playing\")\r\n\r\n\r\n    const embedData = (incomData) => {\r\n        const copyData = JSON.parse(JSON.stringify(data))\r\n        let tepmData = copyData.map(localData => {\r\n            for (let i = 0; i < incomData.length; i++) {\r\n                if (localData.x == incomData[i].x) {\r\n                    if (localData.y == incomData[i].y) {\r\n                        if (localData.z == incomData[i].z) {\r\n                            return incomData[i]\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (i == 2) {\r\n                         return localData\r\n                    }\r\n                }\r\n            }\r\n            return localData\r\n        })\r\n            setData(tepmData)\r\n        let currentStatus=checkGamOver(data)\r\n        if (currentStatus){setStatus(currentStatus)}\r\n     }\r\n\r\n    const getInitialData = () => {\r\n        APIgetData(serverUrl,[]).then((res) => {\r\n            embedData(res.data)\r\n        })\r\n    }\r\n\r\n      function handleKeyDown(event){\r\n        const prevData = JSON.stringify(data)\r\n        let playerTurn=keyDown(event,data)\r\n        if (prevData!==JSON.stringify(playerTurn)){\r\n            setData(playerTurn)\r\n            computerTurn()\r\n        }\r\n    }\r\n\r\n    const computerTurn=()=>{\r\n        const filledArray=data.filter(row=> row.value!=0)\r\n         APIgetData(serverUrl,filledArray).then((res) => {\r\n             embedData(res.data)\r\n             })\r\n    }\r\n\r\n    useEffect(()=>{ getInitialData()},[])\r\n    useEffect(()=>{ document.addEventListener(\"keydown\",handleKeyDown)\r\n        return ()=> document.removeEventListener(\"keydown\",handleKeyDown)\r\n    },[data])\r\n\r\n\r\n    return (\r\n            <div className=\"App\" >\r\n                <div className={\"body\"} >\r\n                    <Header setServerUrl={setServerUrl} status={status}/>\r\n                    {data.map((cell, index) => {\r\n                        return (\r\n                            <div className={`container${index + 1}`} key={index}>\r\n                                <div id=\"hexagon\"\r\n                                     data-x={cell.x} data-y={cell.y} data-z={cell.z} data-value={cell.value}\r\n                                     style={{\r\n                                         ...blockStyle,\r\n                                          background: cell.value ? \"green\" : \"red\"\r\n\r\n                                     }}\r\n\r\n                                > {cell.value}  </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n            </div>\r\n\r\n    );\r\n}\r\n\r\nconst blockStyle = {\r\n    width: 107,\r\n    height: 107,\r\n    color: \"yellow\",\r\n    background: \"red\",\r\n    opacity: 0.5\r\n}\r\n\r\nexport default App;\r\n","\nexport const checkGamOver=(data)=>{\n\n    let tempData = Object.assign([], data);\n\n\n    const swipeUpLeft=()=>{\n        let z=4; let y=6;  let w=0; let q=2; let t=3; let x=5; let f=1\n        let res1=core(x,y,q,t,z,w,f)\n        return res1\n    }\n\n    const swipeUp=()=>{\n        let z=1; let y=4; let w=2; let q=5; let t=3; let x=6; let f=0\n        let res2=core(x,y,q,t,z,w,f)\n        return res2\n\n    }\n\n    const swipeUpRight=()=>{\n       let z=0; let y=1; let w=5; let q=6; let t=3; let x=4; let f=2\n        let res3=core(x,y,q,t,z,w,f)\n        return res3\n    }\n\n    const swipeRightDown=()=>{\n        let z=6; let y=4; let w=2; let q=0; let t=3; let x=1; let f=5\n        let res4=core(x,y,q,t,z,w,f)\n         return res4\n\n    }\n     const swipeDown=()=>{\n        let x=0; let y=1; let q=2; let t=3; let z=4; let w=5; let f=6;\n         let res5=core(x,y,q,t,z,w,f)\n         return res5\n    }\n    const swipeLeftDown=()=>{\n        let z=1; let y=0; let w=6; let f=4; let t=3; let q=5; let x=2;\n        let res=core(x,y,q,t,z,w,f)\n        let res6=core(x,y,q,t,z,w,f)\n        return res6\n    }\n\n\n    const core=(x,y,q,t,z,w,f)=> {\n      if ( ( tempData[z].value !== tempData[y].value) && (tempData[w].value !== tempData[q].value) &&\n            (tempData[t].value !== tempData[x].value) && (tempData[t].value !== tempData[f].value))\n         {return \"game-over\"}\n      else {return \"playing\"}\n    }\n\n                 let res1=swipeUpLeft()\n                 let res2=swipeUp()\n                 let res3=swipeUpRight()\n                 let res4=swipeRightDown()\n                 let res5=swipeDown()\n                 let res6=swipeLeftDown()\n\n    if (res1==res2 && res3==res4 && res5==res6 && res6 && res1 !==\"playing\"){\n        return \"game-over\"\n    }\n\n\n\n    const checkMax=()=>{\n        for (let i=0; i<data.length; i++){\n                 if (2048==data[i].value){\n                 return \"game-over\"\n            }\n        }\n    }\n\n    if (checkMax()==\"game-over\") { return \"game-over\"}\n\n}\n","\nexport const keyDown=(event,data)=>{\n\n    let tempData = Object.assign([], data);\n        const UP= 87;\n        const DOWN= 83;\n        const LEFT_UP= 81;\n        const RIGHT_UP= 69;\n        const LEFT_DOWN= 65;\n        const RIGHT_DOWN= 68;\n\n    const swipeUpLeft=()=>{\n        let z=4; let y=6;  let w=0; let q=2; let t=3; let x=5; let f=1\n        core(x,y,q,t,z,w,f)\n    }\n\n    const swipeUp=()=>{\n        let z=1; let y=4; let w=2; let q=5; let t=3; let x=6; let f=0\n        core(x,y,q,t,z,w,f)\n    }\n\n    const swipeUpRight=()=>{\n       let z=0; let y=1; let w=5; let q=6; let t=3; let x=4; let f=2\n        core(x,y,q,t,z,w,f)\n    }\n\n    const swipeRightDown=()=>{\n        let z=6; let y=4; let w=2; let q=0; let t=3; let x=1; let f=5\n        core(x,y,q,t,z,w,f)\n    }\n     const swipeDown=()=>{\n        let x=0; let y=1; let q=2; let t=3; let z=4; let w=5; let f=6;\n        core(x,y,q,t,z,w,f)\n    }\n    const swipeLeftDown=()=>{\n        let z=1; let y=0; let w=6; let f=4; let t=3; let q=5; let x=2;\n        core(x,y,q,t,z,w,f)\n    }\n\n\n    const core=(x,y,q,t,z,w,f)=> {\n        // -------------- summation left row\n        if (tempData[z].value == tempData[y].value) {\n            tempData[z].value = tempData[y].value * 2\n            tempData[y].value = 0\n        }\n        // --------------summation right row\n        if (tempData[w].value == tempData[q].value) {\n            tempData[w].value = tempData[q].value * 2\n            tempData[q].value = 0\n        }\n        // --------------summation middle row\n        if (tempData[f].value == tempData[t].value) {\n            tempData[f].value = tempData[t].value * 2\n            tempData[t].value = 0\n        }\n        else if (tempData[t].value == tempData[x].value) {\n                 tempData[t].value = tempData[x].value * 2\n                 tempData[x].value = 0\n        }\n        else  if (tempData[f].value == tempData[x].value) {\n                if (tempData[t].value == 0) {\n                    tempData[f].value = tempData[x].value * 2\n                    tempData[x].value = 0\n            }\n        }\n        // --------------move cell in left row\n        if (tempData[z].value === 0) {\n            if (tempData[y].value != 0) {\n                tempData[z].value = tempData[y].value\n                tempData[y].value = 0\n            }\n        }\n        // --------------move cell in right row\n        if (tempData[w].value === 0) {\n            if (tempData[q].value != 0) {\n                tempData[w].value = tempData[q].value\n                tempData[q].value = 0\n            }\n        }\n        // --------------move cell in middle row\n        if (tempData[f].value === 0) {\n            if (tempData[t].value != 0) {\n                tempData[f].value = tempData[t].value\n                tempData[t].value = 0\n            }\n        }\n        if (tempData[t].value === 0) {\n            if (tempData[x].value != 0) {\n                tempData[t].value = tempData[x].value\n                tempData[x].value = 0\n            }\n        }\n        if (tempData[f].value === 0) {\n            if (tempData[t].value != 0) {\n                tempData[f].value = tempData[t].value\n                tempData[t].value = 0\n            }\n        }\n     }\n\n           switch(event.keyCode) {\n            case UP: {\n                   swipeUp()\n                   return tempData\n               }\n               case DOWN: {\n                   swipeDown()\n                   return tempData\n               }\n               case LEFT_UP: {\n                    swipeUpLeft()\n                   return tempData\n               }\n               case RIGHT_UP: {\n                    swipeUpRight()\n                   return tempData\n               }\n               case LEFT_DOWN: {\n                    swipeLeftDown()\n                   return tempData\n               }\n               case RIGHT_DOWN: {\n                    swipeRightDown()\n                   return tempData\n               }\n               default: break;\n           }\n       }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}